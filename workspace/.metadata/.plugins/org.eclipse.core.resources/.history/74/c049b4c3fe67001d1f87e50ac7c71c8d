plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
apply plugin: 'war'
sourceCompatibility = '17'


repositories {
	mavenCentral()
}



dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:2.7.4'
	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'
	//implementation group: 'mysql', name: 'mysql-connector-java', version: '6.0.6'
	//implementation 'mysql:mysql-connector-java:5.6.34'
	//implementation 'mysql:mysql-connector-java:8.0.19'

	
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-test'
	
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	
 	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	
	testCompileOnly 'org.projectlombok:lombok:1.18.24'
	
	testAnnotationProcessor('org.projectlombok:lombok:1.18.24')
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
	  exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	 }
}

tasks.named('test') {
	useJUnitPlatform()
}


jar {
  manifest {
    attributes 'Main-Class': 'Main.class',
        'Class-Path': configurations.compileClasspath.files.collect { "deps/$it.name" }.join(' ')
  }

  archiveName 'dictionary.jar'
}

